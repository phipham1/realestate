:toc: macro
toc::[]

= Aspect Oriented Programming (AOP)

http://en.wikipedia.org/wiki/Aspect-oriented_programming[AOP] is a powerful feature for cross-cutting concerns. However, if used extensive and for the wrong things an application can get unmaintainable. Therefore we give you the best practices where and how to use AOP properly.

== AOP Key Principles
We follow these principles:

* We use http://docs.spring.io/spring/docs/2.5.4/reference/aop.html[spring AOP] based on dynamic proxies (and fallback to cglib).
* We avoid AspectJ and other mighty and complex AOP frameworks whenever possible
* We only use AOP where we consider it as necessary (see below).

== AOP Usage
We recommend to use AOP with care but we consider it established for the following cross cutting concerns:

* link:guide-transactions[Transaction-Handling]
* link:guide-security#method-authorization[Authorization]
* link:guide-validation[Validation]
* link:guide-logging#tracing[Trace-Logging] (for testing and debugging)
* Exception facades for link:guide-service-layer[services] but only if no other solution is possible (use alternatives such as link:guide-service-layer#rest-exception-handling[JAX-RS provider] instead).
